input ForecastInput {
  latitude: Float!
  longitude: Float!
  lang: String!
}

type Currently {
  summary: String!
  temperature: Float!
  humidity: Float!
  windSpeed: Float!
  precipProbability: Float!
}

type Forecast {
  latitude: Float!
  longitude: Float!
  name: String!
  timezone: String!
  currently: Currently!
}

type EarthquakeMagnitude {
  magnitude: Float!
  medida: String!
  fuente: String!
}

type Earthquake {
  enlace: String!
  latitud: Float!
  longitude: Float!
  profundidad: Float!
  magnitude: EarthquakeMagnitude!
  imagen: String!
}

type Microbus {
  valido: Int!
  servicio: String!
  patente: String!
  tiempo: String!
  distancia: String!
}

type Transantiago {
  horaConsulta: String!
  descripcion: String!
  Servicios: [Microbus!]!
}

type Query {
  hello: Hello!
  forecast(data: ForecastInput): Forecast
  hearthquake(data: String!): Earthquake!
  transantiago(data: String!): Transantiago!
}

scalar Hello
